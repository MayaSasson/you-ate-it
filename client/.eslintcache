[{"C:\\Users\\chenfr\\Desktop\\you-ate-it\\client\\src\\index.tsx":"1","C:\\Users\\chenfr\\Desktop\\you-ate-it\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\chenfr\\Desktop\\you-ate-it\\client\\src\\App.tsx":"3","C:\\Users\\chenfr\\Desktop\\you-ate-it\\client\\src\\uAteIt\\youAteIt.tsx":"4","C:\\Users\\chenfr\\Desktop\\you-ate-it\\client\\src\\uAteIt\\form\\form.tsx":"5","C:\\Users\\chenfr\\Desktop\\you-ate-it\\client\\src\\uAteIt\\food-tab\\food-tab.tsx":"6","C:\\Users\\chenfr\\Desktop\\you-ate-it\\client\\src\\uAteIt\\details-tab\\details-tab.tsx":"7","C:\\Users\\chenfr\\Desktop\\you-ate-it\\client\\src\\uAteIt\\header\\header.tsx":"8","C:\\Users\\chenfr\\Desktop\\you-ate-it\\client\\src\\uAteIt\\google-login\\googleLogIn.tsx":"9"},{"size":517,"mtime":1609618722903,"results":"10","hashOfConfig":"11"},{"size":440,"mtime":1609618722918,"results":"12","hashOfConfig":"11"},{"size":217,"mtime":1610018563092,"results":"13","hashOfConfig":"11"},{"size":839,"mtime":1610018592381,"results":"14","hashOfConfig":"11"},{"size":5318,"mtime":1610033788116,"results":"15","hashOfConfig":"11"},{"size":3568,"mtime":1610018583039,"results":"16","hashOfConfig":"11"},{"size":5076,"mtime":1610033903088,"results":"17","hashOfConfig":"11"},{"size":806,"mtime":1610018628229,"results":"18","hashOfConfig":"11"},{"size":1409,"mtime":1610018638453,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1mja6qh",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\chenfr\\Desktop\\you-ate-it\\client\\src\\index.tsx",[],["40","41"],"C:\\Users\\chenfr\\Desktop\\you-ate-it\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\chenfr\\Desktop\\you-ate-it\\client\\src\\App.tsx",[],"C:\\Users\\chenfr\\Desktop\\you-ate-it\\client\\src\\uAteIt\\youAteIt.tsx",[],"C:\\Users\\chenfr\\Desktop\\you-ate-it\\client\\src\\uAteIt\\form\\form.tsx",[],"C:\\Users\\chenfr\\Desktop\\you-ate-it\\client\\src\\uAteIt\\food-tab\\food-tab.tsx",["42"],"import React from 'react';\r\nimport {Checkbox, FormControlLabel, FormControl, TextField, Button} from '@material-ui/core';\r\nimport './style.scss'\r\n  interface IProps {\r\n    onSubmit: (favoritFoodselected: any) => void\r\n    foodList: any\r\n    setElseValueMainForm: (value: any) => void\r\n    // setFavoritFood: (favoriteFood: any) => void\r\n  }\r\n\r\n  export default function FoodTab({onSubmit, foodList, setElseValueMainForm, //setFavoritFood\r\n  }: IProps) {\r\n    const emptyFoodFormState:any = {else: false}\r\n    foodList.map((x: { key: string; }) => {\r\n      let val = x.key\r\n      emptyFoodFormState[val]=false\r\n      })\r\n  const [foodFormState, setFoodFormState] = React.useState(emptyFoodFormState)\r\n  const [elseValue, setElseValue] = React.useState('')\r\n  const [isFormValid, setIsFormValid] = React.useState(false)\r\n  const [showErrorMsg, setShowErrorMsg] = React.useState(false)\r\n\r\n  const updateFormStatus = () => {\r\n    setIsFormValid(true)\r\n    showErrorMsg && setShowErrorMsg(false)\r\n  }\r\n\r\n  const elseValueEntered = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if(foodFormState.else)\r\n    setElseValue(e.target.value)\r\n    const elseObject = {\"key\": e.target.value, \"value\": e.target.value}\r\n    setElseValueMainForm(elseObject)          \r\n  }\r\n  \r\n  const submit = () => {\r\n    if (isFormValid) {\r\n      let temp: any = {...foodFormState}\r\n      if (foodFormState.else) {\r\n        let tmpelseValue = elseValue\r\n        temp[tmpelseValue]=true  \r\n      }\r\n      delete temp.else;\r\n      onSubmit(temp)\r\n  } else {\r\n    setShowErrorMsg(true)\r\n  }\r\n}\r\n\r\n  const renderFavoriteFoodsTab = () => {\r\n    const options = foodList.map((option: { key: string; value: string}) => (\r\n      <FormControlLabel\r\n        key={option.key}\r\n        control={\r\n          <Checkbox \r\n            color=\"primary\" \r\n            value={foodFormState[option.key]} \r\n            onChange={() => {\r\n              setFoodFormState({...foodFormState, [option.key] : !foodFormState[option.key]})\r\n              !foodFormState[option.key] && !isFormValid && updateFormStatus()\r\n            }}\r\n          />\r\n        }\r\n        label={option.value}\r\n        labelPlacement=\"start\"\r\n      />\r\n    ));\r\n\r\n    return ( \r\n        <FormControl component=\"fieldset\" className='favoriteFoodForm'>\r\n            {options}\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox \r\n                  color=\"primary\" \r\n                  value={foodFormState.else} \r\n                  onChange={() => {\r\n                    setFoodFormState({...foodFormState, else: !foodFormState.else}); \r\n                  }}\r\n                />\r\n              }\r\n              label=\"אחר\"\r\n              labelPlacement=\"start\"\r\n            />\r\n            {foodFormState.else && <TextField \r\n              id=\"field\" \r\n              label=\"הקלד מאכל אחר\" \r\n              value={elseValue}\r\n              onChange={e => {\r\n                elseValueEntered(e)\r\n                foodFormState.else && elseValue!=='' && updateFormStatus()\r\n              }}\r\n            />}\r\n        </FormControl>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='form-container'>\r\n      <div className='subtitle'>אנה בחר את המאכלים האהובים עליך</div>\r\n      {renderFavoriteFoodsTab()}\r\n      {showErrorMsg && <div>please check at least one field</div>}\r\n      <Button \r\n        variant=\"contained\" \r\n        color=\"primary\" \r\n        onClick={isFormValid ? submit : () => setShowErrorMsg(true)}>סיום\r\n      </Button>\r\n    </div>\r\n  );\r\n}","C:\\Users\\chenfr\\Desktop\\you-ate-it\\client\\src\\uAteIt\\details-tab\\details-tab.tsx",[],"C:\\Users\\chenfr\\Desktop\\you-ate-it\\client\\src\\uAteIt\\header\\header.tsx",[],"C:\\Users\\chenfr\\Desktop\\you-ate-it\\client\\src\\uAteIt\\google-login\\googleLogIn.tsx",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":14,"column":40,"nodeType":"49","messageId":"50","endLine":14,"endColumn":42},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]