[{"/Users/giantleap/Desktop/you-eat-it/client/src/index.tsx":"1","/Users/giantleap/Desktop/you-eat-it/client/src/reportWebVitals.ts":"2","/Users/giantleap/Desktop/you-eat-it/client/src/App.tsx":"3","/Users/giantleap/Desktop/you-eat-it/client/src/uAteIt/youAteIt.component.tsx":"4","/Users/giantleap/Desktop/you-eat-it/client/src/uAteIt/header/header.component.tsx":"5","/Users/giantleap/Desktop/you-eat-it/client/src/uAteIt/google-login/googleLogIn.component.tsx":"6","/Users/giantleap/Desktop/you-eat-it/client/src/uAteIt/form/form.component.tsx":"7","/Users/giantleap/Desktop/you-eat-it/client/src/uAteIt/food-tab/food-tab.component.tsx":"8","/Users/giantleap/Desktop/you-eat-it/client/src/uAteIt/details-tab/details-tab.component.tsx":"9"},{"size":500,"mtime":1608041119502,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1608041119503,"results":"12","hashOfConfig":"11"},{"size":327,"mtime":1608123820319,"results":"13","hashOfConfig":"11"},{"size":653,"mtime":1608041119510,"results":"14","hashOfConfig":"11"},{"size":777,"mtime":1608145425924,"results":"15","hashOfConfig":"11"},{"size":1413,"mtime":1608041119506,"results":"16","hashOfConfig":"11"},{"size":3219,"mtime":1608148837975,"results":"17","hashOfConfig":"11"},{"size":2030,"mtime":1608190440506,"results":"18","hashOfConfig":"11"},{"size":3714,"mtime":1608144301415,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"13eczco",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/giantleap/Desktop/you-eat-it/client/src/index.tsx",[],["40","41"],"/Users/giantleap/Desktop/you-eat-it/client/src/reportWebVitals.ts",[],"/Users/giantleap/Desktop/you-eat-it/client/src/App.tsx",[],"/Users/giantleap/Desktop/you-eat-it/client/src/uAteIt/youAteIt.component.tsx",[],"/Users/giantleap/Desktop/you-eat-it/client/src/uAteIt/header/header.component.tsx",[],"/Users/giantleap/Desktop/you-eat-it/client/src/uAteIt/google-login/googleLogIn.component.tsx",[],"/Users/giantleap/Desktop/you-eat-it/client/src/uAteIt/form/form.component.tsx",["42","43"],"import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { AppBar , Tabs, Tab, Box, Button} from '@material-ui/core';\nimport './style.scss'\nimport DetailsTab from '../details-tab/details-tab.component'\nimport FoodTab from '../food-tab/food-tab.component'\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  dir?: string;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={2}>\n          <>{children}</>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: '#ababab',\n    width: '100%',\n    float: 'right',\n    height: '92%'\n  },\n}));\n\nexport default function FullWidthTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const tempFavoritFoodList =  [\n    {key: \"pastrama\", value: \"פסטרמה\"},\n    // {key: \"brokoli\", value: \"ברוקולי\"},\n    // {key: \"regel\", value: \"רגל\"},\n    // {key: \"bread\", value: \"לחם מחמצת\"},\n    // {key: \"meatball\", value: \"קציצת סרטן\"}\n]\n  const [foodList, setFoodList] = React.useState(tempFavoritFoodList);\n  const [ isPrivateDetailsSubmited, setIsPrivateDetailsSubmited] = React.useState(false)\n  const [ isFavoriteFoodsSubmited, setIsFavoriteFoodsSubmited] = React.useState(false)\n\n  React.useEffect(() => {\n    getfoodsList()\n          .then((res: { foodslist: React.SetStateAction<{ key: string; value: string; }[]>; }) => setFoodList(res.foodslist))\n          .catch((err: any) => console.log(err));\n  });\n\n  const getfoodsList = async () => {\n    const response = await fetch('/api/getfoodslist');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    return body;\n  }\n  \n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  const submit = () => {\n    console.log('submit')\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          <Tab label=\"פרטים אישיים\" />\n          <Tab label=\"מאכלים אהובים\" />\n        </Tabs>\n      </AppBar>\n        <TabPanel value={value} index={0} >\n          <DetailsTab \n            setIsFormSubmited={setIsPrivateDetailsSubmited}\n          />\n          <Button variant=\"contained\" color=\"primary\" onClick={()=>setValue(1)}>המשך</Button>\n        </TabPanel>\n        <TabPanel value={value} index={1} >\n          <FoodTab \n            foodList = {foodList}\n            setIsFormSubmited={setIsFavoriteFoodsSubmited}\n          />\n          <Button variant=\"contained\" color=\"primary\" onClick={submit}>סיום</Button>\n        </TabPanel>\n    </div>\n  );\n}","/Users/giantleap/Desktop/you-eat-it/client/src/uAteIt/food-tab/food-tab.component.tsx",[],"/Users/giantleap/Desktop/you-eat-it/client/src/uAteIt/details-tab/details-tab.component.tsx",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":55,"column":11,"nodeType":"50","messageId":"51","endLine":55,"endColumn":35},{"ruleId":"48","severity":1,"message":"52","line":56,"column":11,"nodeType":"50","messageId":"51","endLine":56,"endColumn":34},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"@typescript-eslint/no-unused-vars","'isPrivateDetailsSubmited' is assigned a value but never used.","Identifier","unusedVar","'isFavoriteFoodsSubmited' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]